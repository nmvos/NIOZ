# Generated by Django 5.1.1 on 2025-01-09 22:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('maintenance', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CatchLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Fyke name')),
                ('type', models.CharField(max_length=255, verbose_name='Type')),
                ('latitude', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=0, max_digits=9, verbose_name='Longitude')),
                ('remarks', models.TextField(blank=True, verbose_name='Remarks')),
                ('collect_group', models.CharField(choices=[('Texel', 'Texel'), ('Lauwersoog', 'Lauwersoog')], max_length=50, verbose_name='Collect Group')),
                ('print_label', models.CharField(choices=[('Texel', 'Texel'), ('Lauwersoog', 'Lauwersoog')], max_length=50, verbose_name='Print Label')),
            ],
            options={
                'db_table': 'fyke_catchlocations',
            },
        ),
        migrations.CreateModel(
            name='DataCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tidal_phase', models.CharField(blank=True, max_length=255, null=True)),
                ('salinity', models.CharField(blank=True, max_length=8, null=True)),
                ('temperature', models.CharField(blank=True, max_length=8, null=True)),
                ('wind_direction', models.CharField(blank=True, max_length=255, null=True)),
                ('wind_speed', models.CharField(blank=True, max_length=8, null=True)),
                ('secchi_depth', models.CharField(blank=True, max_length=8, null=True)),
                ('fu_scale', models.CharField(blank=True, max_length=255, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('observer', models.CharField(blank=True, max_length=255, null=True)),
                ('last_change', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('fishingday', models.CharField(blank=True, max_length=8, null=True)),
                ('duration', models.CharField(blank=True, max_length=8, null=True)),
                ('collect', models.CharField(blank=True, max_length=8, null=True)),
                ('version', models.CharField(max_length=3)),
                ('fyke', models.CharField(choices=[('Stuifdijk', 'Stuifdijk'), ('Afsluitdijk', 'Afsluitdijk'), ('Schanserwaard', 'Schanserwaard'), ('Pakeerplaats NIOZ achter', 'Pakeerplaats NIOZ achter'), ('Parkeerplaats haven', 'Parkeerplaats haven'), ('Texelstroom', 'Texelstroom'), ('NIOZ dam', 'NIOZ dam'), ('Navicula', 'Navicula'), ('Wierbalg', 'Wierbalg'), ('WMR-NIOZ otoliths project', 'WMR-NIOZ otoliths project'), ('Gat v Stier', 'Gat v Stier'), ('HW-prog', 'HW-prog'), ('IJhaven Amsterdam', 'IJhaven Amsterdam'), ('NA', 'NA'), ('NIOZ_Harbour', 'NIOZ_Harbour'), ('North Sea', 'North Sea'), ('Terschelling', 'Terschelling'), ('Texelstroom', 'Texelstroom'), ('WaddenSea', 'WaddenSea'), ('Texel beach', 'Texel beach'), ('Fyke Sieme', 'Fyke Sieme'), ('Eems', 'Eems'), ('Dooie Hond', 'Dooie Hond'), ('Eerste hoofd', 'Eerste hoofd'), ('Veerhaven', 'Veerhaven'), ('Hors', 'Hors'), ('Schanderwaard', 'Schanderwaard'), ('Vlettenstelling', 'Vlettenstelling'), ('Hoek van de staak', 'Hoek van de staak'), ('Onbekend', 'Onbekend'), ('Schiermonnikoog', 'Schiermonnikoog'), ('Borkumse stenen', 'Borkumse stenen')], max_length=100)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'fyke_datacollection',
            },
        ),
        migrations.CreateModel(
            name='bioticData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fdatex', models.IntegerField(blank=True, null=True)),
                ('measurecode', models.IntegerField(default=10)),
                ('totallength', models.CharField(blank=True, max_length=255, null=True)),
                ('fdetailx', models.IntegerField(default=0)),
                ('regtime', models.DateTimeField(auto_now=True)),
                ('subsample', models.IntegerField(default=1)),
                ('nspecies', models.IntegerField(default=1)),
                ('collectno', models.IntegerField(default=0)),
                ('origin', models.IntegerField(default=1)),
                ('freshweigth', models.CharField(blank=True, max_length=255, null=True)),
                ('collectlocation', models.IntegerField(default=1)),
                ('lengthestimate', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('fishid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maintenance.maintenancespecieslist')),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fyke.datacollection')),
            ],
            options={
                'db_table': 'fyke_bioticdata',
            },
        ),
        migrations.CreateModel(
            name='FishDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collectdate', models.DateField(blank=True, null=True)),
                ('registrationtime', models.DateTimeField(auto_now_add=True, null=True)),
                ('collectno', models.IntegerField(blank=True, null=True)),
                ('condition', models.CharField(blank=True, max_length=50, null=True)),
                ('total_length', models.CharField(blank=True, max_length=50, null=True)),
                ('fork_length', models.CharField(blank=True, max_length=50, null=True)),
                ('standard_length', models.CharField(blank=True, max_length=50, null=True)),
                ('fresh_weight', models.CharField(blank=True, max_length=50, null=True)),
                ('liver_weight', models.CharField(blank=True, max_length=50, null=True)),
                ('total_wet_mass', models.CharField(blank=True, max_length=50, null=True)),
                ('stomach_content', models.CharField(blank=True, max_length=255, null=True)),
                ('gonad_mass', models.CharField(blank=True, max_length=50, null=True)),
                ('sexe', models.CharField(blank=True, max_length=50, null=True)),
                ('ripeness', models.CharField(blank=True, max_length=50, null=True)),
                ('otolith', models.CharField(blank=True, max_length=50, null=True)),
                ('isotopeflag', models.CharField(blank=True, max_length=50, null=True)),
                ('total_length_frozen', models.CharField(blank=True, max_length=50, null=True)),
                ('fork_length_frozen', models.CharField(blank=True, max_length=50, null=True)),
                ('standard_length_frozen', models.CharField(blank=True, max_length=50, null=True)),
                ('frozen_mass', models.CharField(blank=True, max_length=50, null=True)),
                ('height', models.CharField(blank=True, max_length=50, null=True)),
                ('age', models.CharField(blank=True, max_length=50, null=True)),
                ('rings', models.CharField(blank=True, max_length=50, null=True)),
                ('ogew1', models.CharField(blank=True, max_length=50, null=True)),
                ('ogew2', models.CharField(blank=True, max_length=50, null=True)),
                ('tissue_type', models.CharField(blank=True, max_length=50, null=True)),
                ('vial', models.CharField(blank=True, max_length=50, null=True)),
                ('dna_sample', models.BooleanField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, max_length=256, null=True)),
                ('micro_plastic', models.BooleanField(blank=True, null=True)),
                ('last_change', models.DateTimeField(auto_now=True)),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_collections', to='maintenance.maintenancespecieslist')),
            ],
            options={
                'db_table': 'fyke_fishdetails',
            },
        ),
    ]
